# üîê Configuration des Variables d'Environnement
# Exemple de fichier .env pour l'application

# ===== TOKENS CONFIGURATION =====
# Dur√©e de validit√© de l'access token en secondes (3600 = 1 heure)
ACCESS_TOKEN_EXPIRATION=3600

# Dur√©e de validit√© du refresh token en jours (30 = 30 jours)
REFRESH_TOKEN_EXPIRATION_DAYS=30

# Secret pour signer les access tokens (MUST BE UNIQUE AND SECURE)
ACCESS_TOKEN_SECRET=your-super-secret-access-token-key-min-32-chars-long

# Secret pour signer les refresh tokens (MUST BE DIFFERENT FROM ACCESS TOKEN SECRET)
REFRESH_TOKEN_SECRET=your-super-secret-refresh-token-key-min-32-chars-long

# Algorithme de signature pour les tokens
ACCESS_TOKEN_ALGORITHM=HS256
REFRESH_TOKEN_ALGORITHM=HS256

# ===== JWT CONFIGURATION =====
# Issuer pour les JWT (g√©n√©ralement le nom de votre application)
JWT_ISSUER=your-app-name

# Audience pour les JWT (g√©n√©ralement l'URL de votre application)
JWT_AUDIENCE=your-app-domain.com

# ===== PASSWORD CONFIGURATION =====
# Algorithme de hachage pour les mots de passe
PASSWORD_HASH_ALGORITHM=bcrypt

# Nombre de rounds pour bcrypt (plus √©lev√© = plus s√©curis√© mais plus lent)
# Production: 12-15, D√©veloppement: 10, Tests: 8
BCRYPT_ROUNDS=12

# ===== DATABASE CONFIGURATION =====
# üîÄ Configuration Base de Donn√©es Hybride (SQL/NoSQL)
# Valeurs possibles: 'sql' ou 'nosql'
# - sql: Utilise TypeORM avec PostgreSQL
# - nosql: Utilise Mongoose avec MongoDB
DATABASE_TYPE=sql

# ========================================
# CONFIGURATION POSTGRESQL (MODE SQL)
# ========================================
DB_HOST=localhost
DB_PORT=5432
DB_USER=postgres
DB_PASS=password
DB_NAME=rvproject

# SSL Configuration (Production)
DB_SSL=false
DB_SSL_REJECT_UNAUTHORIZED=true

# ========================================
# CONFIGURATION MONGODB (MODE NOSQL)
# ========================================
# URI compl√®te MongoDB avec authentification
MONGODB_URI=mongodb://localhost:27017/rvproject

# Pour MongoDB avec authentification
# MONGODB_URI=mongodb://username:password@localhost:27017/rvproject?authSource=admin

# Pour MongoDB Atlas (Cloud)
# MONGODB_URI=mongodb+srv://username:password@cluster.mongodb.net/rvproject?retryWrites=true&w=majority

# ========================================
# STOCKAGE FICHIERS (MULTI-CLOUD)
# ========================================
# Provider actif: 'aws' | 'azure' | 'gcp'
FILE_STORAGE_PROVIDER=aws

# AWS S3
AWS_ACCESS_KEY_ID=your-aws-access-key
AWS_SECRET_ACCESS_KEY=your-aws-secret-key
AWS_REGION=eu-west-1
AWS_S3_BUCKET=rvproject-files

# Azure Blob Storage
AZURE_STORAGE_ACCOUNT=yourstorageaccount
AZURE_STORAGE_KEY=your-azure-storage-key
AZURE_CONTAINER=rvproject-files

# Google Cloud Storage
GCP_PROJECT_ID=your-gcp-project
GCP_BUCKET=rvproject-files
GOOGLE_APPLICATION_CREDENTIALS=path/to/service-account.json

# ===== REDIS CONFIGURATION =====
# Configuration pour le cache et les sessions
REDIS_HOST=localhost
REDIS_PORT=6379
REDIS_PASSWORD=password123

# ===== USER SESSION CONFIGURATION =====
# Dur√©e de session utilisateur en Redis (en secondes)
USER_SESSION_TTL_SECONDS=3600

# ===== COOKIE CONFIGURATION =====
# Noms des cookies pour les tokens
ACCESS_TOKEN_COOKIE_NAME=access_token
REFRESH_TOKEN_COOKIE_NAME=refresh_token

# ===== SERVER CONFIGURATION =====
# Port du serveur
PORT=3000

# Environment (development, production, test)
NODE_ENV=development

# ===== LOGGING CONFIGURATION =====
# Niveau de log (error, warn, info, debug)
LOG_LEVEL=info

# Format des logs (json, simple)
LOG_FORMAT=json

# ===== EMAIL CONFIGURATION =====
# Configuration Google SMTP pour l'envoi d'emails
EMAIL_HOST=smtp.gmail.com
EMAIL_PORT=587
EMAIL_SECURE=false
EMAIL_AUTH_USER=your-email@gmail.com
EMAIL_AUTH_PASS=your-app-password

# Configuration de l'exp√©diteur
EMAIL_FROM_NAME=Your App Name
EMAIL_FROM_ADDRESS=your-email@gmail.com

# Configuration des templates
EMAIL_TEMPLATES_DIR=templates/emails
EMAIL_DEFAULT_LANGUAGE=fr

# Configuration des emails transactionnels vs background
EMAIL_TRANSACTIONAL_ENABLED=true
EMAIL_BACKGROUND_QUEUE_ENABLED=true
EMAIL_QUEUE_REDIS_URL=redis://localhost:6379
EMAIL_QUEUE_NAME=email-queue

# Limites d'envoi
EMAIL_RATE_LIMIT_MAX=100
EMAIL_RATE_LIMIT_WINDOW_MS=3600000

# ===== SECURITY NOTES =====
# ‚ö†Ô∏è  IMPORTANT SECURITY CONSIDERATIONS:
# 1. Access Token Secret et Refresh Token Secret DOIVENT √™tre diff√©rents
# 2. Les secrets doivent faire au minimum 32 caract√®res
# 3. Utilisez des g√©n√©rateurs de secrets cryptographiquement s√ªrs
# 4. Ne commitez JAMAIS ce fichier avec les vraies valeurs
# 5. En production, utilisez un gestionnaire de secrets (AWS Secrets Manager, Azure Key Vault, etc.)
# 6. Rotez r√©guli√®rement les secrets
# 7. Utilisez des dur√©es de token appropri√©es √† votre contexte de s√©curit√©

# ===== EXAMPLES FOR DIFFERENT ENVIRONMENTS =====

# DEVELOPMENT ENVIRONMENT
# ACCESS_TOKEN_EXPIRATION=3600 (1 hour)
# REFRESH_TOKEN_EXPIRATION_DAYS=30 (30 days)

# PRODUCTION ENVIRONMENT (plus restrictif)
# ACCESS_TOKEN_EXPIRATION=900 (15 minutes)
# REFRESH_TOKEN_EXPIRATION_DAYS=7 (7 days)

# TEST ENVIRONMENT (plus rapide)
# ACCESS_TOKEN_EXPIRATION=300 (5 minutes)
# REFRESH_TOKEN_EXPIRATION_DAYS=1 (1 day)
# BCRYPT_ROUNDS=8 (plus rapide pour les tests)
