# ÔøΩ Configuration D√©veloppement Docker - NestJS Clean Architecture
# Exemple de fichier .env pour d√©veloppement avec Docker Compose

# üåç Application
NODE_ENV=development
PORT=3000
HOST=0.0.0.0

# üóÑÔ∏è Database PostgreSQL (Docker Service)
POSTGRES_USER=postgres
POSTGRES_PASSWORD=postgres
POSTGRES_DB=cleanarchi_dev
DATABASE_HOST=postgres
DATABASE_PORT=5432
DATABASE_USERNAME=postgres
DATABASE_PASSWORD=postgres
DATABASE_NAME=cleanarchi_dev

# üçÉ MongoDB (Docker Service)
MONGO_ROOT_USERNAME=admin
MONGO_ROOT_PASSWORD=admin
MONGO_DB=cleanarchi_dev
MONGODB_HOST=mongodb
MONGODB_PORT=27017
MONGODB_USERNAME=admin
MONGODB_PASSWORD=admin
MONGODB_DATABASE=cleanarchi_dev

# ‚ö° Redis (Docker Service)
REDIS_HOST=redis
REDIS_PORT=6379
REDIS_PASSWORD=redis123

# üîê JWT Configuration - DEVELOPMENT ONLY
ACCESS_TOKEN_SECRET=dev-access-token-secret-for-development-only-32chars
REFRESH_TOKEN_SECRET=dev-refresh-token-secret-for-development-only-32chars
ACCESS_TOKEN_EXPIRATION=3600
REFRESH_TOKEN_EXPIRATION_DAYS=30

# üîí Security Settings - Development Mode
BCRYPT_ROUNDS=4

# üë§ User Sessions
USER_SESSION_DURATION_MINUTES=30
USER_CACHE_RETENTION_MINUTES=60

# üñ•Ô∏è pgAdmin (Optional Web Interface)
PGADMIN_EMAIL=admin@cleanarchi.dev
PGADMIN_PASSWORD=admin123

# üê≥ Docker Development Optimization
NODE_OPTIONS=--max-old-space-size=384
NPM_CONFIG_LOGLEVEL=warn
GENERATE_SOURCEMAP=false
NEST_DEBUG=false
NEST_CLI_EXPERIMENTAL_FORK_TYPE_CHECKER=false

# üìß Email Configuration - Development (Optional)
EMAIL_HOST=smtp.gmail.com
EMAIL_PORT=587
EMAIL_SECURE=false
EMAIL_AUTH_USER=your-dev-email@gmail.com
EMAIL_AUTH_PASS=your-app-password
EMAIL_FROM_NAME=CleanArchi Dev
EMAIL_FROM_ADDRESS=your-dev-email@gmail.com

# ===== COMMANDES DOCKER UTILES =====
# D√©marrer tous les services : docker-compose up -d
# Arr√™ter tous les services : docker-compose down
# Voir les logs de l'API : docker-compose logs app
# Rebuilder l'image : docker-compose up -d --build
# Acc√©der au container : docker-compose exec app sh

# ===== MIGRATION ET BASE DE DONN√âES =====
# Cr√©er une migration : npm run migration:create -- --name=CreateUser
# Lancer les migrations : npm run migrate:run
# Annuler une migration : npm run migrate:revert
# Statut des migrations : npm run migrate:status

# ===== ACC√àS AUX SERVICES =====
# Application NestJS : http://localhost:3000
# pgAdmin (Interface PostgreSQL) : http://localhost:5050
# Swagger Documentation : http://localhost:3000/api
# Health Check : http://localhost:3000/health

# ===== NOTES DE S√âCURIT√â - D√âVELOPPEMENT =====
# ‚ö†Ô∏è Ce fichier contient des valeurs par d√©faut pour le d√©veloppement
# ‚ö†Ô∏è NE PAS utiliser ces valeurs en production
# ‚ö†Ô∏è Les secrets JWT sont volontairement faibles pour le d√©veloppement
# ‚ö†Ô∏è BCRYPT_ROUNDS=4 pour acc√©l√©rer les tests (utiliser 12+ en production)
