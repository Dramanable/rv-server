{
  "name": "appointment-system-api",
  "version": "1.0.0",
  "description": "API Backend pour la gestion de rendez-vous professionnels - Avocats, Dentistes, Cliniques et autres professionnels. Prise de rendez-vous en ligne avec notifications SMS/Email automatiques.",
  "author": "Enterprise Development Team",
  "private": true,
  "license": "MIT",
  "engines": {
    "node": "24.x",
    "npm": ">=10.0.0"
  },
  "keywords": [
    "appointment-booking",
    "professional-scheduling",
    "medical-appointments",
    "lawyer-booking",
    "dental-appointments",
    "clinic-management",
    "sms-notifications",
    "email-reminders",
    "online-booking",
    "patient-management",
    "nestjs",
    "typescript",
    "clean-architecture",
    "rest-api",
    "calendar-api",
    "notification-system"
  ],
  "scripts": {
    "prepare": "husky",
    "build": "nest build",
    "format": "prettier --write \"src/**/*.ts\" \"test/**/*.ts\"",
    "start": "nest start",
    "start:dev": "nest start --watch",
    "start:debug": "nest start --debug --watch",
    "start:prod": "node dist/main",
    "lint": "eslint \"{src,apps,libs,test}/**/*.ts\" --fix",
    "lint:check": "npm run lint && ./scripts/check-clean-architecture.sh",
    "test": "jest",
    "test:watch": "jest --watch",
    "test:cov": "jest --coverage",
    "test:debug": "node --inspect-brk -r tsconfig-paths/register -r ts-node/register node_modules/.bin/jest --runInBand",
    "test:e2e": "jest --config ./test/jest-e2e.json",
    "test:tdd": "jest --watch --verbose",
    "test:unit": "jest --testPathPatterns=spec.ts",
    "test:unit:watch": "jest --testPathPatterns=spec.ts --watch",
    "test:coverage": "jest --coverage --coverageReporters=text-lcov",
    "create-admin": "cat scripts/create-test-admin.md",
    "docker:up": "docker compose up -d postgres redis pgadmin",
    "docker:down": "docker compose down",
    "docker:logs": "docker compose logs -f",
    "docker:ps": "docker compose ps",
    "docker:health": "./scripts/health-check.sh",
    "dev:full": "npm run docker:up && npm run start:dev",
    "migration:generate": "typeorm-ts-node-commonjs migration:generate -d src/infrastructure/database/typeorm.config.ts",
    "migration:create": "typeorm-ts-node-commonjs migration:create",
    "migration:run": "typeorm-ts-node-commonjs migration:run -d src/infrastructure/database/typeorm.config.ts",
    "migration:revert": "typeorm-ts-node-commonjs migration:revert -d src/infrastructure/database/typeorm.config.ts",
    "migration:show": "typeorm-ts-node-commonjs migration:show -d src/infrastructure/database/typeorm.config.ts",
    "schema:drop": "typeorm-ts-node-commonjs schema:drop -d src/infrastructure/database/typeorm.config.ts",
    "schema:sync": "typeorm-ts-node-commonjs schema:sync -d src/infrastructure/database/typeorm.config.ts",
    "db:setup": "./scripts/setup-database.sh",
    "db:reset": "npm run schema:drop && npm run migration:run",
    "prepare": "husky"
  },
  "dependencies": {
    "@aws-sdk/client-s3": "^3.888.0",
    "@azure/storage-blob": "^12.28.0",
    "@google-cloud/storage": "^7.17.1",
    "@nestjs/common": "^11.0.1",
    "@nestjs/config": "^4.0.2",
    "@nestjs/core": "^11.0.1",
    "@nestjs/jwt": "^11.0.0",
    "@nestjs/mongoose": "^11.0.3",
    "@nestjs/passport": "^11.0.5",
    "@nestjs/platform-express": "^11.0.1",
    "@nestjs/swagger": "^11.2.0",
    "@nestjs/terminus": "^11.0.0",
    "@nestjs/throttler": "^6.4.0",
    "@nestjs/typeorm": "^11.0.0",
    "@types/bcrypt": "^6.0.0",
    "@types/compression": "^1.8.1",
    "@types/helmet": "^0.0.48",
    "@types/multer": "^2.0.0",
    "@types/uuid": "^10.0.0",
    "bcrypt": "^6.0.0",
    "class-transformer": "^0.5.1",
    "class-validator": "^0.14.2",
    "compression": "^1.8.1",
    "cookie-parser": "^1.4.7",
    "helmet": "^8.1.0",
    "ioredis": "^5.7.0",
    "mongoose": "^8.17.2",
    "multer": "^2.0.2",
    "nestjs-i18n": "^10.5.1",
    "nestjs-pino": "^4.4.0",
    "passport": "^0.7.0",
    "passport-jwt": "^4.0.1",
    "passport-local": "^1.0.0",
    "pg": "^8.16.3",
    "pino-http": "^10.5.0",
    "pino-pretty": "^13.1.1",
    "reflect-metadata": "^0.2.2",
    "rxjs": "^7.8.1",
    "swagger-ui-express": "^5.0.1",
    "typeorm": "^0.3.26",
    "uuid": "^11.1.0",
    "winston": "^3.17.0"
  },
  "devDependencies": {
    "@commitlint/cli": "^19.8.1",
    "@commitlint/config-conventional": "^19.8.1",
    "@eslint/eslintrc": "^3.2.0",
    "@eslint/js": "^9.18.0",
    "@golevelup/ts-jest": "^0.7.0",
    "@nestjs/cli": "^11.0.0",
    "@nestjs/schematics": "^11.0.0",
    "@nestjs/testing": "^11.0.1",
    "@types/cookie-parser": "^1.4.9",
    "@types/express": "^5.0.0",
    "@types/jest": "^30.0.0",
    "@types/mongoose": "^5.11.96",
    "@types/node": "^22.10.7",
    "@types/passport-jwt": "^4.0.1",
    "@types/passport-local": "^1.0.38",
    "@types/pg": "^8.15.5",
    "@types/supertest": "^6.0.2",
    "dotenv": "^17.2.1",
    "eslint": "^9.18.0",
    "eslint-config-prettier": "^10.0.1",
    "eslint-plugin-prettier": "^5.2.2",
    "globals": "^16.0.0",
    "husky": "^9.1.7",
    "jest": "^30.0.5",
    "jest-mock-extended": "^4.0.0",
    "lint-staged": "^16.1.6",
    "prettier": "^3.4.2",
    "source-map-support": "^0.5.21",
    "supertest": "^7.0.0",
    "ts-jest": "^29.4.1",
    "ts-loader": "^9.5.2",
    "ts-node": "^10.9.2",
    "tsconfig-paths": "^4.2.0",
    "typescript": "^5.7.3",
    "typescript-eslint": "^8.20.0"
  },
  "jest": {
    "moduleFileExtensions": [
      "js",
      "json",
      "ts"
    ],
    "rootDir": "src",
    "testRegex": ".*\\.spec\\.ts$",
    "transform": {
      "^.+\\.(t|j)s$": "ts-jest"
    },
    "collectCoverageFrom": [
      "**/*.(t|j)s"
    ],
    "coverageDirectory": "../coverage",
    "testEnvironment": "node",
    "moduleNameMapper": {
      "^@domain/(.*)$": "<rootDir>/domain/$1",
      "^@application/(.*)$": "<rootDir>/application/$1",
      "^@infrastructure/(.*)$": "<rootDir>/infrastructure/$1",
      "^@presentation/(.*)$": "<rootDir>/presentation/$1",
      "^@shared/(.*)$": "<rootDir>/shared/$1"
    },
    "verbose": true
  },
  "lint-staged": {
    "*.{ts,js}": [
      "eslint --fix",
      "prettier --write"
    ],
    "*.{json,md}": [
      "prettier --write"
    ]
  }
}
