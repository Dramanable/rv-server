/**
 * ðŸŽ­ ROLES DECORATOR - DÃ©corateur pour spÃ©cifier les rÃ´les requis
 *
 * DÃ©corateur NestJS utilisÃ© pour dÃ©finir quels rÃ´les utilisateurs
 * sont autorisÃ©s Ã  accÃ©der Ã  une route ou mÃ©thode de contrÃ´leur.
 *
 * Fonctionne avec RolesGuard pour la vÃ©rification effective.
 *
 * Usage:
 * @Roles(UserRole.BUSINESS_OWNER, UserRole.PLATFORM_ADMIN)
 * @Get('protected-route')
 * async protectedMethod() { ... }
 */

import { SetMetadata } from '@nestjs/common';
import { UserRole } from '../../../shared/enums/user-role.enum';

export const ROLES_KEY = 'roles';

/**
 * DÃ©corateur pour spÃ©cifier les rÃ´les autorisÃ©s
 * @param roles - Liste des rÃ´les autorisÃ©s Ã  accÃ©der Ã  la route
 */
export const Roles = (...roles: UserRole[]) => SetMetadata(ROLES_KEY, roles);
