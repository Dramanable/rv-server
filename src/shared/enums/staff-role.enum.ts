/**
 * üé≠ √âNUM√âRATIONS SP√âCIALIS√âES - R√¥les du Personnel
 *
 * D√©finit les r√¥les sp√©cifiques du personnel pour l'entit√© Staff
 * Compatible avec UserRole mais plus granulaire pour les employ√©s
 */

import { UserRole } from './user-role.enum';

/**
 * üè• R√¥les du Personnel - Mapping avec UserRole
 */
export enum StaffRole {
  // üî¥ Direction & Propri√©t√©
  OWNER = 'OWNER', // = BUSINESS_OWNER
  DIRECTOR = 'DIRECTOR', // = BUSINESS_ADMIN

  // üü° Management Op√©rationnel
  SITE_MANAGER = 'SITE_MANAGER', // = LOCATION_MANAGER
  DEPARTMENT_HEAD = 'DEPARTMENT_HEAD', // = DEPARTMENT_HEAD
  TEAM_LEAD = 'TEAM_LEAD', // Sous-cat√©gorie de DEPARTMENT_HEAD

  // üü¢ Praticiens Professionnels
  SENIOR_DOCTOR = 'SENIOR_DOCTOR', // = SENIOR_PRACTITIONER
  DOCTOR = 'DOCTOR', // = PRACTITIONER
  RESIDENT = 'RESIDENT', // = JUNIOR_PRACTITIONER

  SENIOR_DENTIST = 'SENIOR_DENTIST', // = SENIOR_PRACTITIONER
  DENTIST = 'DENTIST', // = PRACTITIONER
  DENTAL_STUDENT = 'DENTAL_STUDENT', // = JUNIOR_PRACTITIONER

  SENIOR_LAWYER = 'SENIOR_LAWYER', // = SENIOR_PRACTITIONER
  LAWYER = 'LAWYER', // = PRACTITIONER
  PARALEGAL = 'PARALEGAL', // = JUNIOR_PRACTITIONER

  SENIOR_THERAPIST = 'SENIOR_THERAPIST', // = SENIOR_PRACTITIONER
  THERAPIST = 'THERAPIST', // = PRACTITIONER
  THERAPY_INTERN = 'THERAPY_INTERN', // = JUNIOR_PRACTITIONER

  SENIOR_STYLIST = 'SENIOR_STYLIST', // = SENIOR_PRACTITIONER
  STYLIST = 'STYLIST', // = PRACTITIONER
  JUNIOR_STYLIST = 'JUNIOR_STYLIST', // = JUNIOR_PRACTITIONER

  SENIOR_CONSULTANT = 'SENIOR_CONSULTANT', // = SENIOR_PRACTITIONER
  CONSULTANT = 'CONSULTANT', // = PRACTITIONER
  JUNIOR_CONSULTANT = 'JUNIOR_CONSULTANT', // = JUNIOR_PRACTITIONER

  // üîµ Personnel de Support Sp√©cialis√©
  HEAD_RECEPTIONIST = 'HEAD_RECEPTIONIST', // R√©ceptionniste chef
  RECEPTIONIST = 'RECEPTIONIST', // = RECEPTIONIST

  SENIOR_ASSISTANT = 'SENIOR_ASSISTANT', // Assistant exp√©riment√©
  ASSISTANT = 'ASSISTANT', // = ASSISTANT

  APPOINTMENT_COORDINATOR = 'APPOINTMENT_COORDINATOR', // = SCHEDULER
  SCHEDULER = 'SCHEDULER', // = SCHEDULER

  // üü£ R√¥les Sp√©cialis√©s par Domaine
  HYGIENIST = 'HYGIENIST', // Hygi√©niste dentaire
  NURSE = 'NURSE', // Infirmi√®re
  TECHNICIAN = 'TECHNICIAN', // Technicien
  INTERPRETER = 'INTERPRETER', // Interpr√®te
  SECURITY = 'SECURITY', // S√©curit√©
  MAINTENANCE = 'MAINTENANCE', // Maintenance

  // üî∂ R√¥les Temporaires
  SUBSTITUTE = 'SUBSTITUTE', // Rempla√ßant
  TEMP_STAFF = 'TEMP_STAFF', // Personnel temporaire
  INTERN = 'INTERN', // Stagiaire
  VOLUNTEER = 'VOLUNTEER', // B√©n√©vole
}

/**
 * üìä Statuts du Personnel
 */
export enum StaffStatus {
  ACTIVE = 'ACTIVE', // Actif
  INACTIVE = 'INACTIVE', // Inactif
  ON_LEAVE = 'ON_LEAVE', // En cong√©
  SUSPENDED = 'SUSPENDED', // Suspendu
  TERMINATED = 'TERMINATED', // Licenci√©
  RETIRED = 'RETIRED', // Retrait√©
  ON_PROBATION = 'ON_PROBATION', // P√©riode d'essai
}

/**
 * üéØ Mapping StaffRole vers UserRole
 * Permet la conversion automatique pour les permissions
 */
export const STAFF_TO_USER_ROLE_MAPPING: Record<
  StaffRole,
  import('./user-role.enum').UserRole
> = {
  // Direction
  [StaffRole.OWNER]: UserRole.BUSINESS_OWNER,
  [StaffRole.DIRECTOR]: UserRole.BUSINESS_ADMIN,

  // Management
  [StaffRole.SITE_MANAGER]: UserRole.LOCATION_MANAGER,
  [StaffRole.DEPARTMENT_HEAD]: UserRole.DEPARTMENT_HEAD,
  [StaffRole.TEAM_LEAD]: UserRole.DEPARTMENT_HEAD,

  // Praticiens M√©dicaux
  [StaffRole.SENIOR_DOCTOR]: UserRole.SENIOR_PRACTITIONER,
  [StaffRole.DOCTOR]: UserRole.PRACTITIONER,
  [StaffRole.RESIDENT]: UserRole.JUNIOR_PRACTITIONER,

  // Praticiens Dentaires
  [StaffRole.SENIOR_DENTIST]: UserRole.SENIOR_PRACTITIONER,
  [StaffRole.DENTIST]: UserRole.PRACTITIONER,
  [StaffRole.DENTAL_STUDENT]: UserRole.JUNIOR_PRACTITIONER,

  // Praticiens Juridiques
  [StaffRole.SENIOR_LAWYER]: UserRole.SENIOR_PRACTITIONER,
  [StaffRole.LAWYER]: UserRole.PRACTITIONER,
  [StaffRole.PARALEGAL]: UserRole.JUNIOR_PRACTITIONER,

  // Th√©rapeutes
  [StaffRole.SENIOR_THERAPIST]: UserRole.SENIOR_PRACTITIONER,
  [StaffRole.THERAPIST]: UserRole.PRACTITIONER,
  [StaffRole.THERAPY_INTERN]: UserRole.JUNIOR_PRACTITIONER,

  // Beaut√©
  [StaffRole.SENIOR_STYLIST]: UserRole.SENIOR_PRACTITIONER,
  [StaffRole.STYLIST]: UserRole.PRACTITIONER,
  [StaffRole.JUNIOR_STYLIST]: UserRole.JUNIOR_PRACTITIONER,

  // Conseil
  [StaffRole.SENIOR_CONSULTANT]: UserRole.SENIOR_PRACTITIONER,
  [StaffRole.CONSULTANT]: UserRole.PRACTITIONER,
  [StaffRole.JUNIOR_CONSULTANT]: UserRole.JUNIOR_PRACTITIONER,

  // Support
  [StaffRole.HEAD_RECEPTIONIST]: UserRole.RECEPTIONIST,
  [StaffRole.RECEPTIONIST]: UserRole.RECEPTIONIST,
  [StaffRole.SENIOR_ASSISTANT]: UserRole.ASSISTANT,
  [StaffRole.ASSISTANT]: UserRole.ASSISTANT,
  [StaffRole.APPOINTMENT_COORDINATOR]: UserRole.SCHEDULER,
  [StaffRole.SCHEDULER]: UserRole.SCHEDULER,

  // Sp√©cialis√©s
  [StaffRole.HYGIENIST]: UserRole.PRACTITIONER,
  [StaffRole.NURSE]: UserRole.ASSISTANT,
  [StaffRole.TECHNICIAN]: UserRole.ASSISTANT,
  [StaffRole.INTERPRETER]: UserRole.ASSISTANT,
  [StaffRole.SECURITY]: UserRole.ASSISTANT,
  [StaffRole.MAINTENANCE]: UserRole.ASSISTANT,

  // Temporaires
  [StaffRole.SUBSTITUTE]: UserRole.PRACTITIONER,
  [StaffRole.TEMP_STAFF]: UserRole.ASSISTANT,
  [StaffRole.INTERN]: UserRole.JUNIOR_PRACTITIONER,
  [StaffRole.VOLUNTEER]: UserRole.ASSISTANT,
};

/**
 * üé≠ Groupes Fonctionnels de R√¥les Staff
 */
export const STAFF_ROLE_GROUPS = {
  MANAGEMENT: [
    StaffRole.OWNER,
    StaffRole.DIRECTOR,
    StaffRole.SITE_MANAGER,
    StaffRole.DEPARTMENT_HEAD,
    StaffRole.TEAM_LEAD,
  ],

  MEDICAL_PRACTITIONERS: [
    StaffRole.SENIOR_DOCTOR,
    StaffRole.DOCTOR,
    StaffRole.RESIDENT,
    StaffRole.SENIOR_DENTIST,
    StaffRole.DENTIST,
    StaffRole.DENTAL_STUDENT,
    StaffRole.HYGIENIST,
    StaffRole.NURSE,
  ],

  LEGAL_PRACTITIONERS: [
    StaffRole.SENIOR_LAWYER,
    StaffRole.LAWYER,
    StaffRole.PARALEGAL,
  ],

  THERAPY_PRACTITIONERS: [
    StaffRole.SENIOR_THERAPIST,
    StaffRole.THERAPIST,
    StaffRole.THERAPY_INTERN,
  ],

  BEAUTY_PRACTITIONERS: [
    StaffRole.SENIOR_STYLIST,
    StaffRole.STYLIST,
    StaffRole.JUNIOR_STYLIST,
  ],

  CONSULTANTS: [
    StaffRole.SENIOR_CONSULTANT,
    StaffRole.CONSULTANT,
    StaffRole.JUNIOR_CONSULTANT,
  ],

  SUPPORT_STAFF: [
    StaffRole.HEAD_RECEPTIONIST,
    StaffRole.RECEPTIONIST,
    StaffRole.SENIOR_ASSISTANT,
    StaffRole.ASSISTANT,
    StaffRole.APPOINTMENT_COORDINATOR,
    StaffRole.SCHEDULER,
  ],

  TECHNICAL_STAFF: [
    StaffRole.TECHNICIAN,
    StaffRole.MAINTENANCE,
    StaffRole.SECURITY,
  ],

  TEMPORARY_STAFF: [
    StaffRole.SUBSTITUTE,
    StaffRole.TEMP_STAFF,
    StaffRole.INTERN,
    StaffRole.VOLUNTEER,
  ],
} as const;

/**
 * üéØ Niveaux de S√©niorit√©
 */
export enum SeniorityLevel {
  TRAINEE = 'TRAINEE', // Stagiaire/apprenti
  JUNIOR = 'JUNIOR', // Junior
  REGULAR = 'REGULAR', // Standard
  SENIOR = 'SENIOR', // Senior
  LEAD = 'LEAD', // Chef d'√©quipe
  MANAGER = 'MANAGER', // Manager
  DIRECTOR = 'DIRECTOR', // Directeur
  OWNER = 'OWNER', // Propri√©taire
}

/**
 * üèÖ Certifications et Qualifications
 */
export enum CertificationType {
  // M√©dical
  MEDICAL_LICENSE = 'MEDICAL_LICENSE',
  DENTAL_LICENSE = 'DENTAL_LICENSE',
  NURSING_LICENSE = 'NURSING_LICENSE',
  PHARMACY_LICENSE = 'PHARMACY_LICENSE',

  // Juridique
  BAR_ADMISSION = 'BAR_ADMISSION',
  NOTARY_LICENSE = 'NOTARY_LICENSE',

  // Beaut√© & Bien-√™tre
  COSMETOLOGY_LICENSE = 'COSMETOLOGY_LICENSE',
  MASSAGE_THERAPY_LICENSE = 'MASSAGE_THERAPY_LICENSE',
  FITNESS_CERTIFICATION = 'FITNESS_CERTIFICATION',

  // √âducation
  TEACHING_CERTIFICATION = 'TEACHING_CERTIFICATION',
  TRAINING_CERTIFICATION = 'TRAINING_CERTIFICATION',

  // Technique
  TECHNICAL_CERTIFICATION = 'TECHNICAL_CERTIFICATION',
  SAFETY_CERTIFICATION = 'SAFETY_CERTIFICATION',

  // Langues
  LANGUAGE_CERTIFICATION = 'LANGUAGE_CERTIFICATION',
  INTERPRETER_CERTIFICATION = 'INTERPRETER_CERTIFICATION',
}

/**
 * üõ†Ô∏è Utilitaires pour les R√¥les Staff
 */
export class StaffRoleUtils {
  /**
   * Convertit un StaffRole vers le UserRole √©quivalent
   */
  static toUserRole(staffRole: StaffRole): import('./user-role.enum').UserRole {
    return STAFF_TO_USER_ROLE_MAPPING[staffRole];
  }

  /**
   * D√©termine le niveau de s√©niorit√© d'un r√¥le
   */
  static getSeniorityLevel(staffRole: StaffRole): SeniorityLevel {
    if (staffRole === StaffRole.OWNER) return SeniorityLevel.OWNER;
    if (staffRole === StaffRole.DIRECTOR) return SeniorityLevel.DIRECTOR;

    if (
      [StaffRole.SITE_MANAGER, StaffRole.DEPARTMENT_HEAD].includes(staffRole)
    ) {
      return SeniorityLevel.MANAGER;
    }

    if (staffRole === StaffRole.TEAM_LEAD || staffRole.includes('HEAD_')) {
      return SeniorityLevel.LEAD;
    }

    if (staffRole.includes('SENIOR_')) {
      return SeniorityLevel.SENIOR;
    }

    if (
      staffRole.includes('JUNIOR_') ||
      staffRole.includes('STUDENT') ||
      staffRole === StaffRole.INTERN ||
      staffRole === StaffRole.RESIDENT
    ) {
      return SeniorityLevel.JUNIOR;
    }

    if (staffRole === StaffRole.VOLUNTEER || staffRole.includes('INTERN')) {
      return SeniorityLevel.TRAINEE;
    }

    return SeniorityLevel.REGULAR;
  }

  /**
   * V√©rifie si un r√¥le est de type praticien
   */
  static isPractitionerRole(staffRole: StaffRole): boolean {
    const practitionerGroups: StaffRole[] = [
      ...STAFF_ROLE_GROUPS.MEDICAL_PRACTITIONERS,
      ...STAFF_ROLE_GROUPS.LEGAL_PRACTITIONERS,
      ...STAFF_ROLE_GROUPS.THERAPY_PRACTITIONERS,
      ...STAFF_ROLE_GROUPS.BEAUTY_PRACTITIONERS,
      ...STAFF_ROLE_GROUPS.CONSULTANTS,
    ];

    return practitionerGroups.includes(staffRole);
  }

  /**
   * V√©rifie si un r√¥le n√©cessite une licence professionnelle
   */
  static requiresLicense(staffRole: StaffRole): boolean {
    const licensedRoles = [
      StaffRole.SENIOR_DOCTOR,
      StaffRole.DOCTOR,
      StaffRole.RESIDENT,
      StaffRole.SENIOR_DENTIST,
      StaffRole.DENTIST,
      StaffRole.SENIOR_LAWYER,
      StaffRole.LAWYER,
      StaffRole.HYGIENIST,
      StaffRole.NURSE,
      StaffRole.SENIOR_THERAPIST,
      StaffRole.THERAPIST,
    ];

    return licensedRoles.includes(staffRole);
  }

  /**
   * Obtient une description du r√¥le staff
   */
  static getDescription(staffRole: StaffRole): string {
    const descriptions: Record<StaffRole, string> = {
      [StaffRole.OWNER]: "Propri√©taire - Responsable ultime de l'entreprise",
      [StaffRole.DIRECTOR]: 'Directeur - Direction g√©n√©rale et strat√©gie',
      [StaffRole.SITE_MANAGER]:
        "Gestionnaire de Site - Supervision op√©rationnelle d'un lieu",
      [StaffRole.DEPARTMENT_HEAD]:
        "Chef de D√©partement - Direction d'une sp√©cialit√©",
      [StaffRole.TEAM_LEAD]:
        "Chef d'√âquipe - Leadership d'une √©quipe sp√©cialis√©e",

      [StaffRole.SENIOR_DOCTOR]:
        'M√©decin Senior - Expert m√©dical avec mentorat',
      [StaffRole.DOCTOR]: 'M√©decin - Praticien m√©dical certifi√©',
      [StaffRole.RESIDENT]: 'R√©sident - M√©decin en sp√©cialisation',

      [StaffRole.SENIOR_DENTIST]:
        'Dentiste Senior - Expert dentaire avec mentorat',
      [StaffRole.DENTIST]: 'Dentiste - Praticien dentaire certifi√©',
      [StaffRole.DENTAL_STUDENT]: '√âtudiant Dentaire - En formation dentaire',

      [StaffRole.SENIOR_LAWYER]:
        'Avocat Senior - Expert juridique avec mentorat',
      [StaffRole.LAWYER]: 'Avocat - Praticien juridique certifi√©',
      [StaffRole.PARALEGAL]:
        'Assistant Juridique - Support juridique sp√©cialis√©',

      [StaffRole.SENIOR_THERAPIST]:
        'Th√©rapeute Senior - Expert th√©rapeutique avec mentorat',
      [StaffRole.THERAPIST]: 'Th√©rapeute - Praticien th√©rapeutique certifi√©',
      [StaffRole.THERAPY_INTERN]:
        'Stagiaire Th√©rapie - En formation th√©rapeutique',

      [StaffRole.SENIOR_STYLIST]:
        'Styliste Senior - Expert beaut√© avec mentorat',
      [StaffRole.STYLIST]: 'Styliste - Praticien beaut√© certifi√©',
      [StaffRole.JUNIOR_STYLIST]: 'Styliste Junior - En d√©veloppement beaut√©',

      [StaffRole.SENIOR_CONSULTANT]:
        'Consultant Senior - Expert conseil avec mentorat',
      [StaffRole.CONSULTANT]: 'Consultant - Praticien conseil certifi√©',
      [StaffRole.JUNIOR_CONSULTANT]:
        'Consultant Junior - En d√©veloppement conseil',

      [StaffRole.HEAD_RECEPTIONIST]:
        "Chef R√©ceptionniste - Supervision de l'accueil",
      [StaffRole.RECEPTIONIST]:
        'R√©ceptionniste - Accueil et gestion front office',
      [StaffRole.SENIOR_ASSISTANT]:
        'Assistant Senior - Support administratif exp√©riment√©',
      [StaffRole.ASSISTANT]: 'Assistant - Support administratif g√©n√©ral',
      [StaffRole.APPOINTMENT_COORDINATOR]:
        'Coordinateur RDV - Sp√©cialiste planification',
      [StaffRole.SCHEDULER]: 'Planificateur - Gestion des horaires et cr√©neaux',

      [StaffRole.HYGIENIST]: 'Hygi√©niste - Soins pr√©ventifs dentaires',
      [StaffRole.NURSE]: 'Infirmier/√®re - Soins infirmiers sp√©cialis√©s',
      [StaffRole.TECHNICIAN]: 'Technicien - Support technique sp√©cialis√©',
      [StaffRole.INTERPRETER]: 'Interpr√®te - Services de traduction',
      [StaffRole.SECURITY]: 'S√©curit√© - Surveillance et protection',
      [StaffRole.MAINTENANCE]: 'Maintenance - Entretien et r√©parations',

      [StaffRole.SUBSTITUTE]: 'Rempla√ßant - Personnel de remplacement',
      [StaffRole.TEMP_STAFF]: 'Personnel Temporaire - Mission courte dur√©e',
      [StaffRole.INTERN]: 'Stagiaire - Formation pratique',
      [StaffRole.VOLUNTEER]: 'B√©n√©vole - Service volontaire',
    };

    return descriptions[staffRole] || 'R√¥le non d√©fini';
  }
}
