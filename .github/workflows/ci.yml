name: 🚀 CI Clean Architecture NestJS

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    # 🐳 Services for integration tests
    services:
      postgres:
        image: postgres:15-alpine
        env:
          POSTGRES_PASSWORD: test_password
          POSTGRES_USER: test_user
          POSTGRES_DB: test_db
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      redis:
        image: redis:7-alpine
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      mongodb:
        image: mongo:7
        env:
          MONGO_INITDB_ROOT_USERNAME: test_user
          MONGO_INITDB_ROOT_PASSWORD: test_password
          MONGO_INITDB_DATABASE: test_db
        ports:
          - 27017:27017
        options: >-
          --health-cmd "echo 'db.runCommand(\"ping\").ok' | mongosh --quiet"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    # 🌍 Environment variables for tests
    env:
      # Database URLs for integration tests
      POSTGRES_URL: postgresql://test_user:test_password@localhost:5432/test_db
      REDIS_URL: redis://localhost:6379
      MONGODB_URL: mongodb://test_user:test_password@localhost:27017/test_db
      
      # Test environment
      NODE_ENV: test
      JWT_SECRET: test_jwt_secret_for_ci
      JWT_REFRESH_SECRET: test_refresh_secret_for_ci

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '24'

      - name: 📦 Install dependencies
        run: npm i --legacy-peer-deps

      - name: � Wait for services to be healthy
        run: |
          echo "⏳ Waiting for PostgreSQL..."
          timeout 60s bash -c 'until pg_isready -h localhost -p 5432; do sleep 2; done'
          echo "⏳ Waiting for Redis..."
          timeout 60s bash -c 'until redis-cli -h localhost -p 6379 ping | grep -q PONG; do sleep 2; done'
          echo "⏳ Waiting for MongoDB..."
          timeout 60s bash -c 'until mongosh --host localhost:27017 --eval "db.adminCommand(\"ping\")" --quiet; do sleep 2; done'
          echo "✅ All services are ready!"

      - name: �💄 Lint (ESLint)
        run: npm run lint

      - name: 🧪 Run unit tests (Jest)
        run: npm run test:unit

      - name: 🧪 Run integration tests (Jest + Services)
        run: npm run test:integration

      - name: 🏗️ Build TypeScript
        run: npm run build

      - name: 📊 Test Coverage
        run: npm run test:cov

      - name: 📚 Generate Docs (Swagger)
        run: npm run docs || echo "No docs script"

      - name: ✅ Success
        run: echo "✅ CI passed for Clean Architecture NestJS"
